#!/usr/bin/env python3

import rospy
from sensor_msgs.msg import BatteryState
from std_msgs.msg import String

# publisher node
# change to around 9.35V
VOLTAGE_THRESHOLD = 9.7  # Example threshold for low battery

class BatteryMonitor:
    def __init__(self):
        rospy.init_node('battery_monitor', anonymous=True)
        self.battery_warning_publisher = rospy.Publisher('/battery_warning', String, queue_size=10)
        rospy.Subscriber('/mavros/battery', BatteryState, self.battery_callback)

        self.warning_published = False  # To ensure the message is published only once

    def battery_callback(self, msg):
        voltage = msg.voltage
        rospy.loginfo(f"Battery Voltage: {voltage:.2f} V")
        if voltage < VOLTAGE_THRESHOLD and not self.warning_published:
            warning_msg = f"Warning: Battery voltage low! ({voltage:.2f} V)"
            self.battery_warning_publisher.publish(warning_msg)
            rospy.logwarn(warning_msg)

    def run(self):
        rospy.spin()

if __name__ == '__main__':
    try:
        monitor = BatteryMonitor()
        monitor.run()
    except rospy.ROSInterruptException:
        pass
